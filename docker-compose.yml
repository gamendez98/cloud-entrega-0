version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: entrega0
      POSTGRES_PASSWORD: entrega0
      POSTGRES_DB: entrega0
    volumes:
      - ./db/schema/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  # Python Application (Gunicorn + Nginx)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web_app
    environment:
      DATABASE_URL: postgresql://entrega0:entrega0@db:5432/entrega0
      SECRET_KEY: $2b$12$eW5OGLdoeU9XZvRJxAM3tu/bNrUnMUlHc6QzFdqPZhxvsUCa3PPIW
      ENVIRONMENT: production
    volumes:
      - .:/app
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - app_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"
    depends_on:
      - web
    networks:
      - app_network

# Volumes
volumes:
  postgres_data:

# Networks
networks:
  app_network:
    driver: bridge